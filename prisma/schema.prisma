// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(uuid())
  email           String      @unique
  password        String?
  name            String?
  status          String      @default("pending")
  isSocialLogin   Boolean     @default(false)
  socialProvider  SocialProvider? // Adiciona um campo de enum para indicar a plataforma de login social
  socialId        String?
  panels          panels[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model activationCode{
  id        String      @id @default(uuid())
  email     String      @unique
  code      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model RecoveryPassword{
  id        String      @id @default(uuid())
  email     String      @unique
  token     String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model panels{
  id        String      @id @default(uuid())
  name      String      
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  geo       Json?
  devices   connectedDevices[]
  news      DisplayNewsFeed[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model connectedDevices{
  id        String      @id @default(uuid())
  panel     panels      @relation(fields: [panelId], references: [id], onDelete: Cascade)
  panelId   String
  socketId  String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model indirectLogin{
  id        String      @id @default(uuid())
  token     String      @unique
  socketId  String      @unique      
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model RSSnewsknow{
  id        String      @id @default(uuid())
  title     String
  link      String
  icon      String
  tags      String[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model DisplayNewsFeed{
  id       String      @id @default(uuid())
  panel    panels      @relation(fields: [panelId], references: [id], onDelete: Cascade)
  panelId  String
  url      String
  title    String
  icon     String?
}

enum SocialProvider {
  GOOGLE
  GITHUB
}